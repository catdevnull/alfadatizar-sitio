---
import { getEntry, getCollection } from "astro:content";
import GeneralLayout from "../../layouts/GeneralLayout.astro";
import Estrellita from "../../assets/vectors/estrellita.svg?raw";
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";

export const prerender = true;
export async function getStaticPaths() {
  const blogEntries = await getCollection("posts");
  return Promise.all(
    blogEntries.map(async (entry) => {
      const author = await getEntry("authors", entry.data.author.id);
      return {
        params: { slug: entry.slug },
        props: { entry, author },
      };
    })
  );
}
const { entry, author } = Astro.props;
const { Content } = await entry.render();

const authorImages = import.meta.glob<{ default: ImageMetadata }>("/src/assets/images/authors/**/*.{jpeg,jpg,png,gif}");
console.log(authorImages);
if (!authorImages[author.data.image])
  throw new Error(`"${author.data.image}" does not exist in glob: "src/assets/images/authors/**/*.{jpeg,jpg,png,gif}"`);

const formatter = Intl.DateTimeFormat("es-AR", {
  dateStyle: "long",
});
---

<GeneralLayout>
  <header class="p-4 max-w-3xl mx-auto w-full">
    <p class="text-xl">
      <time datetime={entry.data.date.toISOString()}>{formatter.format(entry.data.date)}</time>
    </p>
    <h1 class="text-5xl font-bold">{entry.data.title}</h1>
    <div class="flex items-center gap-4 mt-4">
      {
        author.data.image && (
          <Image src={authorImages[author.data.image]()} alt={author.data.name} class="w-16 h-16 rounded-full" />
        )
      }
      <p class="text-2xl">{author.data.name}</p>
    </div>
  </header>

  <main class="p-4 max-w-3xl mx-auto w-full prose-neutral prose lg:prose-lg">
    <Content />
  </main>

  <div class="p-2 mx-auto">
    <div class="py-4 px-6 max-w-3xl w-full shadow-xl mb-4 border border-amarillo rounded-lg bg-white/20">
      <h2 class="text-3xl font-bold flex gap-4 items-center leading-none justify-center md:justify-start">
        <Fragment set:html={Estrellita.replace("<svg", '<svg class="h-[1em] w-[1em] shrink-0"')} />
        {author.data.pronombres === "masculino" && "Sobre el autor"}
        {author.data.pronombres === "femenino" && "Sobre la autora"}
        {author.data.pronombres === "neutro" && "Sobre le autore"}
        <Fragment set:html={Estrellita.replace("<svg", '<svg class="h-[1em] w-[1em] shrink-0"')} />
      </h2>
      <div class="flex items-center gap-4 my-4">
        {
          author.data.image && (
            <Image src={authorImages[author.data.image]()} alt={author.data.name} class="w-16 h-16 rounded-full" />
          )
        }
        <p class="text-2xl font-bold">{author.data.name}</p>
      </div>
      <p>{author.data.bio}</p>
      <div class="flex gap-4 pt-2">
        {
          author.data.twitter && (
            <a
              href={`https://twitter.com/${author.data.twitter}`}
              class="flex items-center gap-1 leading-none border border-blue-400 rounded-full px-2 py-1"
            >
              <Icon name="radix-icons:twitter-logo" width="1.25em" height="1.25em" />
              <span>@{author.data.twitter}</span>
            </a>
          )
        }
      </div>
    </div>
  </div>
</GeneralLayout>
